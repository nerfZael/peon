/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestPeonImplementation,
  TestPeonImplementationInterface,
} from "../TestPeonImplementation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_authorizedExecutors",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "packageUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "func",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "Query",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "responseHash",
        type: "bytes32",
      },
    ],
    name: "Response",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "packageUri",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "func",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "callbackAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "callbackFunc",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "callbackGasLimit",
        type: "uint256",
      },
    ],
    name: "query",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "responseHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "respond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_queryFee",
        type: "uint256",
      },
    ],
    name: "setQueryFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405267016345785d8a00006005553480156200001d57600080fd5b506040516200160d3803806200160d833981810160405281019062000043919062000201565b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b81518110156200013f576001600080848481518110620000d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620001369062000327565b91505062000087565b505050620003fe565b60006200015f620001598462000284565b6200025b565b905080838252602082019050828560208602820111156200017f57600080fd5b60005b85811015620001b35781620001988882620001bd565b84526020840193506020830192505060018101905062000182565b5050509392505050565b600081519050620001ce81620003e4565b92915050565b600082601f830112620001e657600080fd5b8151620001f884826020860162000148565b91505092915050565b600080604083850312156200021557600080fd5b60006200022585828601620001bd565b925050602083015167ffffffffffffffff8111156200024357600080fd5b6200025185828601620001d4565b9150509250929050565b6000620002676200027a565b9050620002758282620002f1565b919050565b6000604051905090565b600067ffffffffffffffff821115620002a257620002a1620003a4565b5b602082029050602081019050919050565b6000620002c082620002c7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002fc82620003d3565b810181811067ffffffffffffffff821117156200031e576200031d620003a4565b5b80604052505050565b60006200033482620002e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200036a576200036962000375565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003ef81620002b3565b8114620003fb57600080fd5b50565b6111ff806200040e6000396000f3fe60806040526004361061004a5760003560e01c80631fa18f241461004f5780638da5cb5b1461007f578063c24924d6146100aa578063d12fd5a2146100d3578063fdd26881146100fc575b600080fd5b6100696004803603810190610064919061092f565b610127565b6040516100769190610dfd565b60405180910390f35b34801561008b57600080fd5b50610094610259565b6040516100a19190610d02565b60405180910390f35b3480156100b657600080fd5b506100d160048036038101906100cc91906109f2565b61027f565b005b3480156100df57600080fd5b506100fa60048036038101906100f59190610a1b565b610319565b005b34801561010857600080fd5b5061011161076e565b60405161011e9190610dfd565b60405180910390f35b600060055434101561013857600080fd5b620f424082111561014857600080fd5b6003600081548092919061015b90610f92565b9190505550600060035490506000600160008381526020019081526020016000209050858160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160000160146101000a81548163ffffffff021916908360e01c021790555083816001018190555060008160020160006101000a81548160ff0219169083151502179055507f4f04ac424b83dcaaad6e481e41b7fec82dca007ba34d0132b152d4f6f1af830f828c8c8c8c8c60405161024096959493929190610e4f565b60405180910390a1819250505098975050505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610d7d565b60405180910390fd5b8060058190555050565b82828260405160200161032d929190610cbd565b6040516020818303038152906040528051906020012014610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037a90610ddd565b60405180910390fd5b60006001600086815260200190815260200160002090508060020160009054906101000a900460ff16156103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e390610d5d565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e90610dbd565b60405180910390fd5b8060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd90610d1d565b60405180910390fd5b60018160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550806004016000858152602001908152602001600020600081548092919061058690610f92565b91905055506105958185610774565b61059f5750610768565b60018160020160006101000a81548160ff02191690831515021790555060008084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090506020810151915086821461064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690610d3d565b60405180910390fd5b60008360000160149054906101000a900460e01b868660405160200161067793929190610c93565b604051602081830303815290604052905060008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560010154836040516106d89190610cd6565b60006040518083038160008787f1925050503d8060008114610716576040519150601f19603f3d011682016040523d82523d6000602084013e61071b565b606091505b50509050610727610798565b7f9192e473b984efb51da0ae26341a68f0b7b6c8885374bd84114169f826da205f89338a60405161075a93929190610e18565b60405180910390a150505050505b50505050565b60055481565b60006001836004016000848152602001908152602001600020541015905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16476040516107be90610ced565b60006040518083038185875af1925050503d80600081146107fb576040519150601f19603f3d011682016040523d82523d6000602084013e610800565b606091505b5050905080610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b90610d9d565b60405180910390fd5b50565b6000813590506108568161116d565b92915050565b60008135905061086b81611184565b92915050565b6000813590506108808161119b565b92915050565b60008083601f84011261089857600080fd5b8235905067ffffffffffffffff8111156108b157600080fd5b6020830191508360018202830111156108c957600080fd5b9250929050565b60008083601f8401126108e257600080fd5b8235905067ffffffffffffffff8111156108fb57600080fd5b60208301915083600182028301111561091357600080fd5b9250929050565b600081359050610929816111b2565b92915050565b60008060008060008060008060c0898b03121561094b57600080fd5b600089013567ffffffffffffffff81111561096557600080fd5b6109718b828c016108d0565b985098505060206109848b828c0161085c565b965050604089013567ffffffffffffffff8111156109a157600080fd5b6109ad8b828c01610886565b955095505060606109c08b828c01610847565b93505060806109d18b828c01610871565b92505060a06109e28b828c0161091a565b9150509295985092959890939650565b600060208284031215610a0457600080fd5b6000610a128482850161091a565b91505092915050565b60008060008060608587031215610a3157600080fd5b6000610a3f8782880161091a565b9450506020610a508782880161085c565b935050604085013567ffffffffffffffff811115610a6d57600080fd5b610a7987828801610886565b925092505092959194509250565b610a9081610ede565b82525050565b610a9f81610ef0565b82525050565b610ab6610ab182610efa565b610fdb565b82525050565b6000610ac88385610eb1565b9350610ad5838584610f50565b610ade83611014565b840190509392505050565b6000610af58385610ec2565b9350610b02838584610f50565b82840190509392505050565b6000610b1982610ea6565b610b238185610ec2565b9350610b33818560208601610f5f565b80840191505092915050565b6000610b4b8385610ecd565b9350610b58838584610f50565b610b6183611014565b840190509392505050565b6000610b79601a83610ecd565b9150610b8482611025565b602082019050919050565b6000610b9c600c83610ecd565b9150610ba78261104e565b602082019050919050565b6000610bbf601f83610ecd565b9150610bca82611077565b602082019050919050565b6000610be2601583610ecd565b9150610bed826110a0565b602082019050919050565b6000610c05601483610ecd565b9150610c10826110c9565b602082019050919050565b6000610c28602183610ecd565b9150610c33826110f2565b604082019050919050565b6000610c4b601883610ecd565b9150610c5682611141565b602082019050919050565b6000610c6e600083610ec2565b9150610c798261116a565b600082019050919050565b610c8d81610f46565b82525050565b6000610c9f8286610aa5565b600482019150610cb0828486610ae9565b9150819050949350505050565b6000610cca828486610ae9565b91508190509392505050565b6000610ce28284610b0e565b915081905092915050565b6000610cf882610c61565b9150819050919050565b6000602082019050610d176000830184610a87565b92915050565b60006020820190508181036000830152610d3681610b6c565b9050919050565b60006020820190508181036000830152610d5681610b8f565b9050919050565b60006020820190508181036000830152610d7681610bb2565b9050919050565b60006020820190508181036000830152610d9681610bd5565b9050919050565b60006020820190508181036000830152610db681610bf8565b9050919050565b60006020820190508181036000830152610dd681610c1b565b9050919050565b60006020820190508181036000830152610df681610c3e565b9050919050565b6000602082019050610e126000830184610c84565b92915050565b6000606082019050610e2d6000830186610c84565b610e3a6020830185610a87565b610e476040830184610a96565b949350505050565b6000608082019050610e646000830189610c84565b8181036020830152610e77818789610b3f565b9050610e866040830186610a96565b8181036060830152610e99818486610abc565b9050979650505050505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610ee982610f26565b9050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610f7d578082015181840152602081019050610f62565b83811115610f8c576000848401525b50505050565b6000610f9d82610f46565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fd057610fcf610fe5565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f596f75206861766520616c726561647920726573706f6e646564000000000000600082015250565b7f42616420656e636f64696e670000000000000000000000000000000000000000600082015250565b7f51756572792068617320616c7265616479206265656e20657865637574656400600082015250565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b7f4661696c656420746f2073656e642066756e6473000000000000000000000000600082015250565b7f596f7520617265206e6f7420617574686f72697a656420746f20726573706f6e60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f526573706f6e7365206861736820697320696e76616c69640000000000000000600082015250565b50565b61117681610ede565b811461118157600080fd5b50565b61118d81610ef0565b811461119857600080fd5b50565b6111a481610efa565b81146111af57600080fd5b50565b6111bb81610f46565b81146111c657600080fd5b5056fea2646970667358221220abbecc9db78e3e64598cea3f803654f9821a17d03ea05cca19d49a4acb76fb1864736f6c63430008040033";

export class TestPeonImplementation__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _owner: string,
    _authorizedExecutors: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestPeonImplementation> {
    return super.deploy(
      _owner,
      _authorizedExecutors,
      overrides || {}
    ) as Promise<TestPeonImplementation>;
  }
  getDeployTransaction(
    _owner: string,
    _authorizedExecutors: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _authorizedExecutors,
      overrides || {}
    );
  }
  attach(address: string): TestPeonImplementation {
    return super.attach(address) as TestPeonImplementation;
  }
  connect(signer: Signer): TestPeonImplementation__factory {
    return super.connect(signer) as TestPeonImplementation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPeonImplementationInterface {
    return new utils.Interface(_abi) as TestPeonImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPeonImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestPeonImplementation;
  }
}
