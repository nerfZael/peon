/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestPeonEndpointImplementation,
  TestPeonEndpointImplementationInterface,
} from "../TestPeonEndpointImplementation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "queryId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "packageUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "func",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "Query",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "queryId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "responseHash",
        type: "bytes32",
      },
    ],
    name: "Response",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "packageUri",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "func",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "callbackAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "callbackFunc",
        type: "bytes4",
      },
    ],
    name: "query",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "queryId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "responseHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "respond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610df9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063418ff82a1461003b5780639aaf87781461006b575b600080fd5b610055600480360381019061005091906107b7565b610087565b6040516100629190610a32565b60405180910390f35b6100856004803603810190610080919061074b565b610193565b005b60006003600081548092919061009c90610c47565b9190505550600060035460001b90506000600160008381526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160000160146101000a81548163ffffffff021916908360e01c021790555060008160000160186101000a81548160ff0219169083151502179055507ff6a4b64b2013b243b98b4e86d60f9a957446677052506cb831af5648441c3083828b8b8b8b8b60405161017b96959493929190610a84565b60405180910390a18192505050979650505050505050565b8282826040516020016101a7929190610a02565b60405160208183030381529060405280519060200120146101fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f490610b3b565b60405180910390fd5b60006001600086815260200190815260200160002090508060000160189054906101000a900460ff1615610266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025d90610b1b565b60405180910390fd5b8060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ec90610adb565b60405180910390fd5b60018160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550806002016000858152602001908152602001600020600081548092919061037590610c47565b91905055506103848185610654565b61038e575061064e565b60018160000160186101000a81548160ff0219169083151502179055506000602067ffffffffffffffff8111156103ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156104205781602001600182028036833780820191505090505b50905060005b60208110156104ed57848482818110610468577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b8282815181106104ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806104e590610c47565b915050610426565b50600060208201519050868114610539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053090610afb565b60405180910390fd5b60008360000160149054906101000a900460e01b8686604051602001610561939291906109d8565b604051602081830303815290604052905060008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516105bd9190610a1b565b6000604051808303816000865af19150503d80600081146105fa576040519150601f19603f3d011682016040523d82523d6000602084013e6105ff565b606091505b505090508061060d57600080fd5b7f67c76d3ecbbd9260f85e17ae22c94e9aa9d42dd5e70109cf4eba179c38d74ac589338a60405161064093929190610a4d565b60405180910390a150505050505b50505050565b60006001836002016000848152602001908152602001600020541015905092915050565b60008135905061068781610d7e565b92915050565b60008135905061069c81610d95565b92915050565b6000813590506106b181610dac565b92915050565b60008083601f8401126106c957600080fd5b8235905067ffffffffffffffff8111156106e257600080fd5b6020830191508360018202830111156106fa57600080fd5b9250929050565b60008083601f84011261071357600080fd5b8235905067ffffffffffffffff81111561072c57600080fd5b60208301915083600182028301111561074457600080fd5b9250929050565b6000806000806060858703121561076157600080fd5b600061076f8782880161068d565b94505060206107808782880161068d565b935050604085013567ffffffffffffffff81111561079d57600080fd5b6107a9878288016106b7565b925092505092959194509250565b600080600080600080600060a0888a0312156107d257600080fd5b600088013567ffffffffffffffff8111156107ec57600080fd5b6107f88a828b01610701565b9750975050602061080b8a828b0161068d565b955050604088013567ffffffffffffffff81111561082857600080fd5b6108348a828b016106b7565b945094505060606108478a828b01610678565b92505060806108588a828b016106a2565b91505092959891949750929550565b61087081610b93565b82525050565b61087f81610ba5565b82525050565b61089661089182610baf565b610c90565b82525050565b60006108a88385610b66565b93506108b5838584610c05565b6108be83610cc9565b840190509392505050565b60006108d58385610b77565b93506108e2838584610c05565b82840190509392505050565b60006108f982610b5b565b6109038185610b77565b9350610913818560208601610c14565b80840191505092915050565b600061092b8385610b82565b9350610938838584610c05565b61094183610cc9565b840190509392505050565b6000610959601a83610b82565b915061096482610cda565b602082019050919050565b600061097c600c83610b82565b915061098782610d03565b602082019050919050565b600061099f601f83610b82565b91506109aa82610d2c565b602082019050919050565b60006109c2601883610b82565b91506109cd82610d55565b602082019050919050565b60006109e48286610885565b6004820191506109f58284866108c9565b9150819050949350505050565b6000610a0f8284866108c9565b91508190509392505050565b6000610a2782846108ee565b915081905092915050565b6000602082019050610a476000830184610876565b92915050565b6000606082019050610a626000830186610876565b610a6f6020830185610867565b610a7c6040830184610876565b949350505050565b6000608082019050610a996000830189610876565b8181036020830152610aac81878961091f565b9050610abb6040830186610876565b8181036060830152610ace81848661089c565b9050979650505050505050565b60006020820190508181036000830152610af48161094c565b9050919050565b60006020820190508181036000830152610b148161096f565b9050919050565b60006020820190508181036000830152610b3481610992565b9050919050565b60006020820190508181036000830152610b54816109b5565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610b9e82610bdb565b9050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610c32578082015181840152602081019050610c17565b83811115610c41576000848401525b50505050565b6000610c5282610bfb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8557610c84610c9a565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f596f75206861766520616c726561647920726573706f6e646564000000000000600082015250565b7f42616420656e636f64696e670000000000000000000000000000000000000000600082015250565b7f51756572792068617320616c7265616479206265656e20657865637574656400600082015250565b7f526573706f6e7365206861736820697320696e76616c69640000000000000000600082015250565b610d8781610b93565b8114610d9257600080fd5b50565b610d9e81610ba5565b8114610da957600080fd5b50565b610db581610baf565b8114610dc057600080fd5b5056fea2646970667358221220574a4b65a8524d8ab07fb5e0da8bebc5bb8204ff46f8c1fa6a9a205584697ad964736f6c63430008040033";

export class TestPeonEndpointImplementation__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestPeonEndpointImplementation> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestPeonEndpointImplementation>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestPeonEndpointImplementation {
    return super.attach(address) as TestPeonEndpointImplementation;
  }
  connect(signer: Signer): TestPeonEndpointImplementation__factory {
    return super.connect(signer) as TestPeonEndpointImplementation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPeonEndpointImplementationInterface {
    return new utils.Interface(_abi) as TestPeonEndpointImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPeonEndpointImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestPeonEndpointImplementation;
  }
}
