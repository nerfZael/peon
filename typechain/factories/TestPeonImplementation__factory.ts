/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestPeonImplementation,
  TestPeonImplementationInterface,
} from "../TestPeonImplementation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_authorizedExecutors",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "queryId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "packageUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "func",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "Query",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "queryId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "responseHash",
        type: "bytes32",
      },
    ],
    name: "Response",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "packageUri",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "func",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "callbackAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "callbackFunc",
        type: "bytes4",
      },
    ],
    name: "query",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "queryId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "responseHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "respond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012c1380380620012c18339818101604052810190620000379190620001b3565b60005b8151811015620000f257600160008084848151811062000083577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620000e990620002c4565b9150506200003a565b50506200039b565b6000620001116200010b8462000221565b620001f8565b905080838252602082019050828560208602820111156200013157600080fd5b60005b858110156200016557816200014a88826200016f565b84526020840193506020830192505060018101905062000134565b5050509392505050565b600081519050620001808162000381565b92915050565b600082601f8301126200019857600080fd5b8151620001aa848260208601620000fa565b91505092915050565b600060208284031215620001c657600080fd5b600082015167ffffffffffffffff811115620001e157600080fd5b620001ef8482850162000186565b91505092915050565b60006200020462000217565b90506200021282826200028e565b919050565b6000604051905090565b600067ffffffffffffffff8211156200023f576200023e62000341565b5b602082029050602081019050919050565b60006200025d8262000264565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002998262000370565b810181811067ffffffffffffffff82111715620002bb57620002ba62000341565b5b80604052505050565b6000620002d18262000284565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000307576200030662000312565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6200038c8162000250565b81146200039857600080fd5b50565b610f1680620003ab6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063418ff82a1461003b5780639aaf87781461006b575b600080fd5b61005560048036038101906100509190610842565b610087565b6040516100629190610ae0565b60405180910390f35b610085600480360381019061008091906107d6565b610193565b005b60006003600081548092919061009c90610d15565b9190505550600060035460001b90506000600160008381526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160000160146101000a81548163ffffffff021916908360e01c021790555060008160000160186101000a81548160ff0219169083151502179055507ff6a4b64b2013b243b98b4e86d60f9a957446677052506cb831af5648441c3083828b8b8b8b8b60405161017b96959493929190610b32565b60405180910390a18192505050979650505050505050565b8282826040516020016101a7929190610ab0565b60405160208183030381529060405280519060200120146101fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f490610c09565b60405180910390fd5b60006001600086815260200190815260200160002090508060000160189054906101000a900460ff1615610266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025d90610bc9565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e890610be9565b60405180910390fd5b8060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610b89565b60405180910390fd5b60018160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550806002016000858152602001908152602001600020600081548092919061040090610d15565b919050555061040f81856106df565b61041957506106d9565b60018160000160186101000a81548160ff0219169083151502179055506000602067ffffffffffffffff811115610479577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156104ab5781602001600182028036833780820191505090505b50905060005b6020811015610578578484828181106104f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b828281518110610536577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061057090610d15565b9150506104b1565b506000602082015190508681146105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90610ba9565b60405180910390fd5b60008360000160149054906101000a900460e01b86866040516020016105ec93929190610a86565b604051602081830303815290604052905060008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516106489190610ac9565b6000604051808303816000865af19150503d8060008114610685576040519150601f19603f3d011682016040523d82523d6000602084013e61068a565b606091505b505090508061069857600080fd5b7f67c76d3ecbbd9260f85e17ae22c94e9aa9d42dd5e70109cf4eba179c38d74ac589338a6040516106cb93929190610afb565b60405180910390a150505050505b50505050565b60006001836002016000848152602001908152602001600020541015905092915050565b60008135905061071281610e9b565b92915050565b60008135905061072781610eb2565b92915050565b60008135905061073c81610ec9565b92915050565b60008083601f84011261075457600080fd5b8235905067ffffffffffffffff81111561076d57600080fd5b60208301915083600182028301111561078557600080fd5b9250929050565b60008083601f84011261079e57600080fd5b8235905067ffffffffffffffff8111156107b757600080fd5b6020830191508360018202830111156107cf57600080fd5b9250929050565b600080600080606085870312156107ec57600080fd5b60006107fa87828801610718565b945050602061080b87828801610718565b935050604085013567ffffffffffffffff81111561082857600080fd5b61083487828801610742565b925092505092959194509250565b600080600080600080600060a0888a03121561085d57600080fd5b600088013567ffffffffffffffff81111561087757600080fd5b6108838a828b0161078c565b975097505060206108968a828b01610718565b955050604088013567ffffffffffffffff8111156108b357600080fd5b6108bf8a828b01610742565b945094505060606108d28a828b01610703565b92505060806108e38a828b0161072d565b91505092959891949750929550565b6108fb81610c61565b82525050565b61090a81610c73565b82525050565b61092161091c82610c7d565b610d5e565b82525050565b60006109338385610c34565b9350610940838584610cd3565b61094983610d97565b840190509392505050565b60006109608385610c45565b935061096d838584610cd3565b82840190509392505050565b600061098482610c29565b61098e8185610c45565b935061099e818560208601610ce2565b80840191505092915050565b60006109b68385610c50565b93506109c3838584610cd3565b6109cc83610d97565b840190509392505050565b60006109e4601a83610c50565b91506109ef82610da8565b602082019050919050565b6000610a07600c83610c50565b9150610a1282610dd1565b602082019050919050565b6000610a2a601f83610c50565b9150610a3582610dfa565b602082019050919050565b6000610a4d602183610c50565b9150610a5882610e23565b604082019050919050565b6000610a70601883610c50565b9150610a7b82610e72565b602082019050919050565b6000610a928286610910565b600482019150610aa3828486610954565b9150819050949350505050565b6000610abd828486610954565b91508190509392505050565b6000610ad58284610979565b915081905092915050565b6000602082019050610af56000830184610901565b92915050565b6000606082019050610b106000830186610901565b610b1d60208301856108f2565b610b2a6040830184610901565b949350505050565b6000608082019050610b476000830189610901565b8181036020830152610b5a8187896109aa565b9050610b696040830186610901565b8181036060830152610b7c818486610927565b9050979650505050505050565b60006020820190508181036000830152610ba2816109d7565b9050919050565b60006020820190508181036000830152610bc2816109fa565b9050919050565b60006020820190508181036000830152610be281610a1d565b9050919050565b60006020820190508181036000830152610c0281610a40565b9050919050565b60006020820190508181036000830152610c2281610a63565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610c6c82610ca9565b9050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d00578082015181840152602081019050610ce5565b83811115610d0f576000848401525b50505050565b6000610d2082610cc9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d5357610d52610d68565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f596f75206861766520616c726561647920726573706f6e646564000000000000600082015250565b7f42616420656e636f64696e670000000000000000000000000000000000000000600082015250565b7f51756572792068617320616c7265616479206265656e20657865637574656400600082015250565b7f596f7520617265206e6f7420617574686f72697a656420746f20726573706f6e60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f526573706f6e7365206861736820697320696e76616c69640000000000000000600082015250565b610ea481610c61565b8114610eaf57600080fd5b50565b610ebb81610c73565b8114610ec657600080fd5b50565b610ed281610c7d565b8114610edd57600080fd5b5056fea2646970667358221220234531d282c16e380290ca68c6a9ca27cd3d6e7f2044506eeb5d0fabb389780a64736f6c63430008040033";

export class TestPeonImplementation__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _authorizedExecutors: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestPeonImplementation> {
    return super.deploy(
      _authorizedExecutors,
      overrides || {}
    ) as Promise<TestPeonImplementation>;
  }
  getDeployTransaction(
    _authorizedExecutors: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authorizedExecutors, overrides || {});
  }
  attach(address: string): TestPeonImplementation {
    return super.attach(address) as TestPeonImplementation;
  }
  connect(signer: Signer): TestPeonImplementation__factory {
    return super.connect(signer) as TestPeonImplementation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPeonImplementationInterface {
    return new utils.Interface(_abi) as TestPeonImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPeonImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestPeonImplementation;
  }
}
