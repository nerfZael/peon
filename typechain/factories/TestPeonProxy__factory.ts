/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestPeonProxy, TestPeonProxyInterface } from "../TestPeonProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "packageUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "func",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "Query",
    type: "event",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peonAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peonFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "packageUri",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "func",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "callbackAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "callbackFunc",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "callbackGasLimit",
        type: "uint256",
      },
    ],
    name: "query",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "respond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_peonAddress",
        type: "address",
      },
    ],
    name: "setPeon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_peonFee",
        type: "uint256",
      },
    ],
    name: "setPeonFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526702c68af0bb1400006004553480156200001d57600080fd5b50604051620015ef380380620015ef8339818101604052810190620000439190620000a2565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011c565b6000815190506200009c8162000102565b92915050565b600060208284031215620000b557600080fd5b6000620000c5848285016200008b565b91505092915050565b6000620000db82620000e2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010d81620000ce565b81146200011957600080fd5b50565b6114c3806200012c6000396000f3fe60806040526004361061009c5760003560e01c8063853828b611610064578063853828b61461018d5780638da5cb5b146101a4578063b5c43634146101cf578063d0e30db0146101f8578063db16aab914610202578063dbc7bc22146102195761009c565b80631fa18f24146100a157806326224c64146100d15780632e1a7d4d1461010e57806334589cf214610137578063810b226d14610162575b600080fd5b6100bb60048036038101906100b69190610d9d565b610242565b6040516100c89190611162565b60405180910390f35b3480156100dd57600080fd5b506100f860048036038101906100f39190610d74565b61055c565b6040516101059190611162565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610e60565b610574565b005b34801561014357600080fd5b5061014c6106fb565b6040516101599190611162565b60405180910390f35b34801561016e57600080fd5b50610177610701565b6040516101849190611054565b60405180910390f35b34801561019957600080fd5b506101a2610725565b005b3480156101b057600080fd5b506101b96108a1565b6040516101c69190611054565b60405180910390f35b3480156101db57600080fd5b506101f660048036038101906101f19190610d74565b6108c7565b005b61020061099a565b005b34801561020e57600080fd5b50610217610a2a565b005b34801561022557600080fd5b50610240600480360381019061023b9190610e60565b610bdd565b005b6000600454341015610378573460045461025c9190611262565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116102dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d3906110e2565b60405180910390fd5b60045434600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461032a919061120c565b6103349190611262565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631fa18f246004548c8c8c8c8c3063db16aab960e01b8c6040518a63ffffffff1660e01b81526004016103ec98979695949392919061106f565b6020604051808303818588803b15801561040557600080fd5b505af1158015610419573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061043e9190610e89565b905060405180604001604052808673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908360e01c02179055509050507f4f04ac424b83dcaaad6e481e41b7fec82dca007ba34d0132b152d4f6f1af830f818b8b8b8b8b6040516105449695949392919061117d565b60405180910390a18091505098975050505050505050565b60036020528060005260406000206000915090505481565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f2906110e2565b60405180910390fd5b81816106079190611262565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16836040516106709061103f565b60006040518083038185875af1925050503d80600081146106ad576040519150601f19603f3d011682016040523d82523d6000602084013e6106b2565b606091505b50509050806106f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ed90611122565b60405180910390fd5b505050565b60045481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a390611142565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516108179061103f565b60006040518083038185875af1925050503d8060008114610854576040519150601f19603f3d011682016040523d82523d6000602084013e610859565b606091505b505090508061089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490611122565b60405180910390fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e90611102565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109e5919061120c565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600080368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090506000600460208301015190506000600260008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505090506000816020015190508060208501526000826000015173ffffffffffffffffffffffffffffffffffffffff1685604051610b869190611028565b6000604051808303816000865af19150503d8060008114610bc3576040519150601f19603f3d011682016040523d82523d6000602084013e610bc8565b606091505b5050905080610bd657600080fd5b5050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6490611102565b60405180910390fd5b8060048190555050565b600081359050610c8681611431565b92915050565b600081359050610c9b81611448565b92915050565b600081359050610cb08161145f565b92915050565b60008083601f840112610cc857600080fd5b8235905067ffffffffffffffff811115610ce157600080fd5b602083019150836001820283011115610cf957600080fd5b9250929050565b60008083601f840112610d1257600080fd5b8235905067ffffffffffffffff811115610d2b57600080fd5b602083019150836001820283011115610d4357600080fd5b9250929050565b600081359050610d5981611476565b92915050565b600081519050610d6e81611476565b92915050565b600060208284031215610d8657600080fd5b6000610d9484828501610c77565b91505092915050565b60008060008060008060008060c0898b031215610db957600080fd5b600089013567ffffffffffffffff811115610dd357600080fd5b610ddf8b828c01610d00565b98509850506020610df28b828c01610c8c565b965050604089013567ffffffffffffffff811115610e0f57600080fd5b610e1b8b828c01610cb6565b95509550506060610e2e8b828c01610c77565b9350506080610e3f8b828c01610ca1565b92505060a0610e508b828c01610d4a565b9150509295985092959890939650565b600060208284031215610e7257600080fd5b6000610e8084828501610d4a565b91505092915050565b600060208284031215610e9b57600080fd5b6000610ea984828501610d5f565b91505092915050565b610ebb81611296565b82525050565b610eca816112a8565b82525050565b610ed9816112b2565b82525050565b6000610eeb83856111df565b9350610ef8838584611308565b610f0183611379565b840190509392505050565b6000610f17826111d4565b610f2181856111f0565b9350610f31818560208601611317565b80840191505092915050565b6000610f4983856111fb565b9350610f56838584611308565b610f5f83611379565b840190509392505050565b6000610f776010836111fb565b9150610f828261138a565b602082019050919050565b6000610f9a6015836111fb565b9150610fa5826113b3565b602082019050919050565b6000610fbd6014836111fb565b9150610fc8826113dc565b602082019050919050565b6000610fe06000836111f0565b9150610feb82611405565b600082019050919050565b60006110036008836111fb565b915061100e82611408565b602082019050919050565b611022816112fe565b82525050565b60006110348284610f0c565b915081905092915050565b600061104a82610fd3565b9150819050919050565b60006020820190506110696000830184610eb2565b92915050565b600060c082019050818103600083015261108a818a8c610f3d565b90506110996020830189610ec1565b81810360408301526110ac818789610edf565b90506110bb6060830186610eb2565b6110c86080830185610ed0565b6110d560a0830184611019565b9998505050505050505050565b600060208201905081810360008301526110fb81610f6a565b9050919050565b6000602082019050818103600083015261111b81610f8d565b9050919050565b6000602082019050818103600083015261113b81610fb0565b9050919050565b6000602082019050818103600083015261115b81610ff6565b9050919050565b60006020820190506111776000830184611019565b92915050565b60006080820190506111926000830189611019565b81810360208301526111a5818789610f3d565b90506111b46040830186610ec1565b81810360608301526111c7818486610edf565b9050979650505050505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611217826112fe565b9150611222836112fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112575761125661134a565b5b828201905092915050565b600061126d826112fe565b9150611278836112fe565b92508282101561128b5761128a61134a565b5b828203905092915050565b60006112a1826112de565b9050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561133557808201518184015260208101905061131a565b83811115611344576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b7f4661696c656420746f2073656e642066756e6473000000000000000000000000600082015250565b50565b7f4e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b61143a81611296565b811461144557600080fd5b50565b611451816112a8565b811461145c57600080fd5b50565b611468816112b2565b811461147357600080fd5b50565b61147f816112fe565b811461148a57600080fd5b5056fea2646970667358221220646de7fa3367d15d9719710ff9d91d1ac22579c6cbcf5bf61422719106bab80964736f6c63430008040033";

export class TestPeonProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestPeonProxy> {
    return super.deploy(_owner, overrides || {}) as Promise<TestPeonProxy>;
  }
  getDeployTransaction(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  attach(address: string): TestPeonProxy {
    return super.attach(address) as TestPeonProxy;
  }
  connect(signer: Signer): TestPeonProxy__factory {
    return super.connect(signer) as TestPeonProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPeonProxyInterface {
    return new utils.Interface(_abi) as TestPeonProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPeonProxy {
    return new Contract(address, _abi, signerOrProvider) as TestPeonProxy;
  }
}
