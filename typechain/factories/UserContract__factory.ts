/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UserContract, UserContractInterface } from "../UserContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_peonAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "Query",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "response",
        type: "string",
      },
    ],
    name: "Response",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "responseStr",
        type: "string",
      },
    ],
    name: "callback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestQuery",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "string",
            name: "responseStr",
            type: "string",
          },
        ],
        internalType: "struct UserContract.QueryInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestQueryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queryInfos",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "string",
        name: "responseStr",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "packageUri",
        type: "string",
      },
      {
        internalType: "string",
        name: "method",
        type: "string",
      },
      {
        internalType: "string",
        name: "argStr",
        type: "string",
      },
    ],
    name: "someFunc",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ebc380380610ebc8339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610100565b600081519050610088816100e9565b92915050565b6000602082840312156100a057600080fd5b60006100ae84828501610079565b91505092915050565b60006100c2826100c9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f2816100b7565b81146100fd57600080fd5b50565b610dad8061010f6000396000f3fe60806040526004361061004a5760003560e01c80635a8f64781461004f5780636b55bb321461008d578063b0b251b6146100b8578063b69a375d146100d4578063d86d8ebc146100fd575b600080fd5b34801561005b57600080fd5b506100766004803603810190610071919061082e565b610128565b604051610084929190610a94565b60405180910390f35b34801561009957600080fd5b506100a26101e1565b6040516100af9190610b59565b60405180910390f35b6100d260048036038101906100cd919061078a565b6102ba565b005b3480156100e057600080fd5b506100fb60048036038101906100f69190610880565b610490565b005b34801561010957600080fd5b506101126105cb565b60405161011f9190610b7b565b60405180910390f35b60006020528060005260406000206000915090508060000160009054906101000a900460ff169080600101805461015e90610cee565b80601f016020809104026020016040519081016040528092919081815260200182805461018a90610cee565b80156101d75780601f106101ac576101008083540402835291602001916101d7565b820191906000526020600020905b8154815290600101906020018083116101ba57829003601f168201915b5050505050905082565b6101e96105d1565b60008060025481526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff1615151515815260200160018201805461023390610cee565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610cee565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b505050505081525050905090565b600084846040516020016102cf929190610a7b565b604051602081830303815290604052805190602001209050600083836040516020016102fc929190610ac4565b60405160208183030381529060405290506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631fa18f24348b8b87873063b69a375d60e01b62019a286040518963ffffffff1660e01b81526004016103819796959493929190610ae8565b6020604051808303818588803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103d39190610857565b905060405180604001604052806001151581526020016040518060200160405280600081525081525060008083815260200190815260200160002060008201518160000160006101000a81548160ff021916908315150217905550602082015181600101908051906020019061044a9291906105ed565b509050507f1ee1088a723f4cdc9d72c03577a1db018a797c4e7d0f0cce904d59021fa7eefd8160405161047d9190610b7b565b60405180910390a1505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610514577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600080600085815260200190815260200160002090508060000160009054906101000a900460ff1661056f577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b8282826001019190610582929190610673565b50836002819055507f649d11cf246fc1a31ca3c4a69ad2bb6d5af11a696f732dc2ae11ccc062e849ae8484846040516105bd93929190610b96565b60405180910390a150505050565b60025481565b6040518060400160405280600015158152602001606081525090565b8280546105f990610cee565b90600052602060002090601f01602090048101928261061b5760008555610662565b82601f1061063457805160ff1916838001178555610662565b82800160010185558215610662579182015b82811115610661578251825591602001919060010190610646565b5b50905061066f91906106f9565b5090565b82805461067f90610cee565b90600052602060002090601f0160209004810192826106a157600085556106e8565b82601f106106ba57803560ff19168380011785556106e8565b828001600101855582156106e8579182015b828111156106e75782358255916020019190600101906106cc565b5b5090506106f591906106f9565b5090565b5b808211156107125760008160009055506001016106fa565b5090565b60008083601f84011261072857600080fd5b8235905067ffffffffffffffff81111561074157600080fd5b60208301915083600182028301111561075957600080fd5b9250929050565b60008135905061076f81610d60565b92915050565b60008151905061078481610d60565b92915050565b600080600080600080606087890312156107a357600080fd5b600087013567ffffffffffffffff8111156107bd57600080fd5b6107c989828a01610716565b9650965050602087013567ffffffffffffffff8111156107e857600080fd5b6107f489828a01610716565b9450945050604087013567ffffffffffffffff81111561081357600080fd5b61081f89828a01610716565b92509250509295509295509295565b60006020828403121561084057600080fd5b600061084e84828501610760565b91505092915050565b60006020828403121561086957600080fd5b600061087784828501610775565b91505092915050565b60008060006040848603121561089557600080fd5b60006108a386828701610760565b935050602084013567ffffffffffffffff8111156108c057600080fd5b6108cc86828701610716565b92509250509250925092565b6108e181610c1c565b82525050565b6108f081610c2e565b82525050565b6108ff81610c2e565b82525050565b61090e81610c3a565b82525050565b61091d81610c44565b82525050565b600061092e82610bc8565b6109388185610bde565b9350610948818560208601610cbb565b61095181610d4f565b840191505092915050565b61096581610c9a565b82525050565b60006109778385610c00565b9350610984838584610cac565b61098d83610d4f565b840190509392505050565b60006109a48385610c11565b93506109b1838584610cac565b82840190509392505050565b60006109c882610bd3565b6109d28185610bef565b93506109e2818560208601610cbb565b6109eb81610d4f565b840191505092915050565b6000610a0182610bd3565b610a0b8185610c00565b9350610a1b818560208601610cbb565b610a2481610d4f565b840191505092915050565b6000604083016000830151610a4760008601826108e7565b5060208301518482036020860152610a5f82826109bd565b9150508091505092915050565b610a7581610c90565b82525050565b6000610a88828486610998565b91508190509392505050565b6000604082019050610aa960008301856108f6565b8181036020830152610abb81846109f6565b90509392505050565b60006020820190508181036000830152610adf81848661096b565b90509392505050565b600060c0820190508181036000830152610b0381898b61096b565b9050610b126020830188610905565b8181036040830152610b248187610923565b9050610b3360608301866108d8565b610b406080830185610914565b610b4d60a083018461095c565b98975050505050505050565b60006020820190508181036000830152610b738184610a2f565b905092915050565b6000602082019050610b906000830184610a6c565b92915050565b6000604082019050610bab6000830186610a6c565b8181036020830152610bbe81848661096b565b9050949350505050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610c2782610c70565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ca582610c90565b9050919050565b82818337600083830152505050565b60005b83811015610cd9578082015181840152602081019050610cbe565b83811115610ce8576000848401525b50505050565b60006002820490506001821680610d0657607f821691505b60208210811415610d1a57610d19610d20565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610d6981610c90565b8114610d7457600080fd5b5056fea2646970667358221220e87a6de3bbbfe8d8c841122caab418cb565029718ab52b4590532fb96b3576bb64736f6c63430008040033";

export class UserContract__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _peonAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UserContract> {
    return super.deploy(_peonAddress, overrides || {}) as Promise<UserContract>;
  }
  getDeployTransaction(
    _peonAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_peonAddress, overrides || {});
  }
  attach(address: string): UserContract {
    return super.attach(address) as UserContract;
  }
  connect(signer: Signer): UserContract__factory {
    return super.connect(signer) as UserContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserContractInterface {
    return new utils.Interface(_abi) as UserContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserContract {
    return new Contract(address, _abi, signerOrProvider) as UserContract;
  }
}
